@model ClaimOrchestrator.Models.Claim

@{
	ViewData["Title"] = $"Claim {Model.ClaimNumber}";
}

<div class="container-fluid">
	<div class="row">
		<div class="col-12">
			<div class="d-flex justify-content-between align-items-center mb-4">
				<div>
					<h1 class="h3 mb-0 text-brown">Claim Details</h1>
					<p class="text-muted mb-0">@Model.ClaimNumber</p>
				</div>
				<div>
					<a asp-action="Index" class="btn btn-outline-secondary">
						<i class="fas fa-arrow-left me-2"></i>Back to Claims
					</a>
				</div>
			</div>
			
			@if (TempData["Message"] != null)
			{
				<div class="alert alert-success alert-dismissible fade show" role="alert">
					@TempData["Message"]
					<button type="button" class="btn-close" data-bs-dismiss="alert"></button>
				</div>
			}
			
			<div class="row">
				<div class="col-md-6">
					<div class="card shadow-sm mb-4">
						<div class="card-header bg-light">
							<h5 class="card-title mb-0 text-brown">Claim Information</h5>
						</div>
						<div class="card-body">
							<div class="row">
								<div class="col-sm-4">
									<strong>Claim Number:</strong>
								</div>
								<div class="col-sm-8">
									@Model.ClaimNumber
								</div>
							</div>
							<hr>
							<div class="row">
								<div class="col-sm-4">
									<strong>Claimant:</strong>
								</div>
								<div class="col-sm-8">
									@Model.ClaimantName
								</div>
							</div>
							<hr>
							<div class="row">
								<div class="col-sm-4">
									<strong>Address:</strong>
								</div>
								<div class="col-sm-8">
									@Model.Address
								</div>
							</div>
							<hr>
							<div class="row">
								<div class="col-sm-4">
									<strong>Amount:</strong>
								</div>
								<div class="col-sm-8">
									<span class="badge bg-success fs-6">$@Model.Amount.ToString("N2")</span>
								</div>
							</div>
							<hr>
							<div class="row">
								<div class="col-sm-4">
									<strong>Status:</strong>
								</div>
								<div class="col-sm-8">
									@{
										var statusClass = Model.Status switch
										{
											"Pending" => "bg-warning",
											"Validated" => "bg-info",
											"Deduplicated" => "bg-primary",
											"Eligible" => "bg-success",
											"Processed" => "bg-success",
											"Failed" => "bg-danger",
											_ => "bg-secondary"
										};
									}
									<span class="badge @statusClass fs-6">@Model.Status</span>
								</div>
							</div>
							<hr>
							<div class="row">
								<div class="col-sm-4">
									<strong>Created:</strong>
								</div>
								<div class="col-sm-8">
									@Model.CreatedAt.ToString("MMM dd, yyyy 'at' h:mm tt")
								</div>
							</div>
						</div>
					</div>
					
					<div class="card shadow-sm">
						<div class="card-header bg-light">
							<h5 class="card-title mb-0 text-brown">Processing Actions</h5>
						</div>
						<div class="card-body">
							<div class="d-grid gap-2">
								@if (Model.Status == "Pending")
								{
									<form asp-action="Process" asp-route-id="@Model.Id" method="post">
										@Html.AntiForgeryToken()
										<button type="submit" class="btn btn-success btn-lg">
											<i class="fas fa-play me-2"></i>Process All Steps
										</button>
									</form>
								}
								
								<div class="row">
									<div class="col-6">
										<form asp-action="Validate" asp-route-id="@Model.Id" method="post">
											@Html.AntiForgeryToken()
											<button type="submit" class="btn btn-outline-info w-100">
												<i class="fas fa-check me-2"></i>Validate
											</button>
										</form>
									</div>
									<div class="col-6">
										<form asp-action="CheckDuplication" asp-route-id="@Model.Id" method="post">
											@Html.AntiForgeryToken()
											<button type="submit" class="btn btn-outline-primary w-100">
												<i class="fas fa-search me-2"></i>Check Duplicates
											</button>
										</form>
									</div>
								</div>
								
								<form asp-action="CheckEligibility" asp-route-id="@Model.Id" method="post">
									@Html.AntiForgeryToken()
									<button type="submit" class="btn btn-outline-success">
										<i class="fas fa-thumbs-up me-2"></i>Check Eligibility
									</button>
								</form>
							</div>
						</div>
					</div>
				</div>
				
				<div class="col-md-6">
					<div class="card shadow-sm">
						<div class="card-header bg-light">
							<h5 class="card-title mb-0 text-brown">Processing Logs</h5>
						</div>
						<div class="card-body p-0">
							@if (Model.ProcessingLogs.Any())
							{
								<div class="list-group list-group-flush">
									@foreach (var log in Model.ProcessingLogs)
									{
										<div class="list-group-item">
											<div class="d-flex justify-content-between align-items-start">
												<div class="flex-grow-1">
													<div class="d-flex align-items-center mb-1">
														@{
															var iconClass = log.Status switch
															{
																"Completed" => "fas fa-check-circle text-success",
																"Failed" => "fas fa-times-circle text-danger",
																"Error" => "fas fa-exclamation-triangle text-warning",
																_ => "fas fa-clock text-muted"
															};
														}
														<i class="@iconClass me-2"></i>
														<strong>@log.StepName</strong>
														<span class="badge @(log.Status == "Completed" ? "bg-success" : log.Status == "Failed" ? "bg-danger" : "bg-warning") ms-2">
															@log.Status
														</span>
													</div>
													@if (!string.IsNullOrEmpty(log.Message))
													{
														<small class="text-muted">@log.Message</small>
													}
												</div>
												<small class="text-muted">@log.Timestamp.ToString("MMM dd, h:mm tt")</small>
											</div>
										</div>
									}
								</div>
							}
							else
							{
								<div class="text-center py-4">
									<i class="fas fa-clipboard-list fa-2x text-muted mb-2"></i>
									<p class="text-muted mb-0">No processing logs yet</p>
								</div>
							}
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div> 
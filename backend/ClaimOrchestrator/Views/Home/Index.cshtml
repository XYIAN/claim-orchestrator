@{
    ViewData["Title"] = "Home Page";
}

<div class="hero-section text-center py-5">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <h1 class="display-3 fw-bold mb-4 text-gradient">
                    <i class="fas fa-clipboard-check me-3"></i>
                    Claim Orchestrator
                </h1>
                <p class="lead mb-4">
                    Streamline your claims processing with our comprehensive orchestration platform. 
                    Automate validation, deduplication, and eligibility checks for maximum efficiency.
                </p>
                <div class="d-flex justify-content-center gap-3 mb-5">
                    <a asp-controller="Claims" asp-action="Index" class="btn btn-primary btn-lg glass-effect">
                        <i class="fas fa-clipboard-list me-2"></i>View Claims
                    </a>
                    <a asp-controller="Claims" asp-action="Upload" class="btn btn-outline-primary btn-lg glass-effect">
                        <i class="fas fa-upload me-2"></i>Upload Claims
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="features-section py-5">
    <div class="container">
        <div class="row g-4">
            <div class="col-md-4">
                <div class="feature-card text-center p-4 glass-effect h-100">
                    <div class="feature-icon mb-3">
                        <i class="fas fa-shield-alt fa-3x text-primary"></i>
                    </div>
                    <h3 class="h5 mb-3">Automated Validation</h3>
                    <p class="text-muted">
                        Intelligent validation algorithms ensure data integrity and compliance 
                        with industry standards for every claim processed.
                    </p>
                </div>
            </div>
            <div class="col-md-4">
                <div class="feature-card text-center p-4 glass-effect h-100">
                    <div class="feature-icon mb-3">
                        <i class="fas fa-search fa-3x text-primary"></i>
                    </div>
                    <h3 class="h5 mb-3">Smart Deduplication</h3>
                    <p class="text-muted">
                        Advanced duplicate detection prevents processing of redundant claims, 
                        saving time and reducing errors in your workflow.
                    </p>
                </div>
            </div>
            <div class="col-md-4">
                <div class="feature-card text-center p-4 glass-effect h-100">
                    <div class="feature-icon mb-3">
                        <i class="fas fa-check-circle fa-3x text-primary"></i>
                    </div>
                    <h3 class="h5 mb-3">Eligibility Checks</h3>
                    <p class="text-muted">
                        Comprehensive eligibility verification ensures only valid claims 
                        proceed through the processing pipeline.
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="stats-section py-5 bg-light">
    <div class="container">
        <div class="row text-center">
            <div class="col-md-3">
                <div class="stat-item">
                    <h2 class="display-4 fw-bold text-primary mb-2">99.9%</h2>
                    <p class="text-muted">Processing Accuracy</p>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stat-item">
                    <h2 class="display-4 fw-bold text-primary mb-2">50%</h2>
                    <p class="text-muted">Faster Processing</p>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stat-item">
                    <h2 class="display-4 fw-bold text-primary mb-2">24/7</h2>
                    <p class="text-muted">System Availability</p>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stat-item">
                    <h2 class="display-4 fw-bold text-primary mb-2">100%</h2>
                    <p class="text-muted">Data Security</p>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="cta-section py-5">
    <div class="container text-center">
        <h2 class="mb-4">Ready to Transform Your Claims Processing?</h2>
        <p class="lead mb-4">
            Join thousands of organizations that trust Claim Orchestrator for their claims management needs.
        </p>
        <a asp-controller="Claims" asp-action="Upload" class="btn btn-primary btn-lg glass-effect">
            <i class="fas fa-rocket me-2"></i>Get Started Today
        </a>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Enhanced animations for the home page
            const heroSection = document.querySelector('.hero-section');
            const featureCards = document.querySelectorAll('.feature-card');
            const statItems = document.querySelectorAll('.stat-item');
            
            // Hero section entrance animation
            if (heroSection) {
                heroSection.style.opacity = '0';
                heroSection.style.transform = 'translateY(30px)';
                
                setTimeout(() => {
                    heroSection.style.transition = 'all 0.8s cubic-bezier(0.4, 0, 0.2, 1)';
                    heroSection.style.opacity = '1';
                    heroSection.style.transform = 'translateY(0)';
                }, 200);
            }
            
            // Feature cards staggered animation
            featureCards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(40px) scale(0.95)';
                
                setTimeout(() => {
                    card.style.transition = 'all 0.6s cubic-bezier(0.4, 0, 0.2, 1)';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0) scale(1)';
                }, 600 + (index * 200));
            });
            
            // Stats counter animation
            const animateCounter = (element, target, duration = 2000) => {
                let start = 0;
                const increment = target / (duration / 16);
                
                const timer = setInterval(() => {
                    start += increment;
                    if (start >= target) {
                        element.textContent = target;
                        clearInterval(timer);
                    } else {
                        element.textContent = Math.floor(start);
                    }
                }, 16);
            };
            
            // Observe stats for counter animation
            const statsObserver = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        const statNumber = entry.target.querySelector('h2');
                        const text = statNumber.textContent;
                        
                        if (text.includes('%')) {
                            const number = parseInt(text);
                            animateCounter(statNumber, number);
                        } else if (text === '24/7') {
                            statNumber.classList.add('pulse');
                        } else if (text === '100%') {
                            animateCounter(statNumber, 100);
                        }
                        
                        statsObserver.unobserve(entry.target);
                    }
                });
            }, { threshold: 0.5 });
            
            statItems.forEach(item => {
                statsObserver.observe(item);
            });
            
            // Enhanced button hover effects
            const buttons = document.querySelectorAll('.btn');
            buttons.forEach(button => {
                button.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-3px) scale(1.05)';
                });
                
                button.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0) scale(1)';
                });
            });
            
            // Parallax effect for background
            window.addEventListener('scroll', () => {
                const scrolled = window.pageYOffset;
                const parallaxElements = document.querySelectorAll('.glass-effect');
                
                parallaxElements.forEach(element => {
                    const speed = 0.5;
                    element.style.transform = `translateY(${scrolled * speed}px)`;
                });
            });
        });
    </script>
}
